#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

#FROM mcr.microsoft.com/dotnet/runtime:7.0 AS base
FROM mcr.microsoft.com/dotnet/aspnet:7.0 AS base
WORKDIR /app
EXPOSE 8080
EXPOSE 7203

FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build
WORKDIR /src
COPY ["/src/Chat.Bot.API/Chat.Bot.API.csproj", "Chat.Bot.API/"]
COPY ["/src/Application/Application.csproj", "Application/"]
COPY ["/src/Domain/Domain.csproj", "Domain/"]
COPY ["/src/Domain.Core/Domain.Core.csproj", "Domain.Core/"]
COPY ["/src/Infra.CrossCutting.IoC/Infra.CrossCutting.IoC.csproj", "Infra.CrossCutting.IoC/"]
COPY ["/src/Infra.CrossCutting.Http/Infra.CrossCutting.Http.csproj", "Infra.CrossCutting.Http/"]
COPY ["/src/Infra.CrossCutting.Log/Infra.CrossCutting.Log.csproj", "Infra.CrossCutting.Log/"]
COPY ["/src/Infra.Data.SqlServer/Infra.Data.SqlServer.csproj", "Infra.Data.SqlServer/"]
RUN dotnet restore "/src/Chat.Bot.API/Chat.Bot.API.csproj"
COPY . .
WORKDIR "/src/src/Chat.Bot.API"
RUN dotnet build "Chat.Bot.API.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "/src/src/Chat.Bot.API/Chat.Bot.API.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "Chat.Bot.API.dll"]